version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      # Database Configuration
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/dormventory
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=dormventory
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      
      # AWS Configuration
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      
      # JWT Security Configuration
      - JWT_SECRET=${JWT_SECRET:-404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-86400000}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION:-604800000}
      
      # Spring Profile
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - db
    networks:
      - dormventory-network

  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=dormventory
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - dormventory-network

  # Optional: Redis for session management (future enhancement)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - dormventory-network

volumes:
  postgres_data:

networks:
  dormventory-network:
    driver: bridge 